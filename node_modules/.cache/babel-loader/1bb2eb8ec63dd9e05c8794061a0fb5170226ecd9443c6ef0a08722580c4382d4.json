{"ast":null,"code":"import React,{useState}from'react';import PhotoCapture from'./PhotoCapture';import Map from'./Map';import'./App.css';import amznLogo from'./assets/amzn_logo.png';// Ensure this path is correct\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const[coordinates,setCoordinates]=useState([]);const[isConfirmed,setIsConfirmed]=useState(false);const handleCapture=photos=>{if(photos.length===4){setCoordinates(photos.map(photo=>({...photo,latitude:photo.latitude,longitude:photo.longitude})));setIsConfirmed(false);}};const handleConfirm=()=>{setIsConfirmed(true);// Handle confirmed bounding box, e.g., save to server\n};const handleStartOver=()=>{setCoordinates([]);setIsConfirmed(false);};const handleRetake=index=>{setIsConfirmed(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"img\",{src:amznLogo,alt:\"Amazon Logo\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Photo Geo Logger\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"You will need to take 4 images from each corner of the desired geofence\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"To take a photo, simply press the blue camera icon\"}),/*#__PURE__*/_jsx(\"li\",{children:\"To retake a photo, simply press the green camera icon\"})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"divider\"})]}),!isConfirmed&&/*#__PURE__*/_jsx(PhotoCapture,{onCapture:handleCapture}),coordinates.length===4&&!isConfirmed&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"photo-gallery\",children:coordinates.map((coord,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{margin:'0 10px',textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Photo \",index+1,\" (of 4)\"]}),/*#__PURE__*/_jsx(\"img\",{src:coord.imageUrl,alt:\"Photo \".concat(index+1),style:{width:'100px',height:'100px',objectFit:'cover'}})]},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"map-container\",children:/*#__PURE__*/_jsx(Map,{coordinates:coordinates,onConfirm:handleConfirm,onStartOver:handleStartOver,onRetake:handleRetake})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleConfirm,disabled:coordinates.length!==4,children:\"Submit\"})]})]});};export default App;","map":{"version":3,"names":["React","useState","PhotoCapture","Map","amznLogo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","coordinates","setCoordinates","isConfirmed","setIsConfirmed","handleCapture","photos","length","map","photo","latitude","longitude","handleConfirm","handleStartOver","handleRetake","index","children","src","alt","className","onCapture","coord","style","margin","textAlign","imageUrl","concat","width","height","objectFit","onConfirm","onStartOver","onRetake","onClick","disabled"],"sources":["/Users/buddychin/Desktop/geofence-photo/photo-geo-pwa/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PhotoCapture from './PhotoCapture';\nimport Map from './Map';\nimport './App.css';\nimport amznLogo from './assets/amzn_logo.png'; // Ensure this path is correct\n\nconst App = () => {\n  const [coordinates, setCoordinates] = useState([]);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n\n  const handleCapture = (photos) => {\n    if (photos.length === 4) {\n      setCoordinates(photos.map(photo => ({ ...photo, latitude: photo.latitude, longitude: photo.longitude })));\n      setIsConfirmed(false);\n    }\n  };\n\n  const handleConfirm = () => {\n    setIsConfirmed(true);\n    // Handle confirmed bounding box, e.g., save to server\n  };\n\n  const handleStartOver = () => {\n    setCoordinates([]);\n    setIsConfirmed(false);\n  };\n\n  const handleRetake = (index) => {\n    setIsConfirmed(false);\n  };\n\n  return (\n    <div>\n      <header>\n        <img src={amznLogo} alt=\"Amazon Logo\" />\n        <h1>Photo Geo Logger</h1>\n      </header>\n      <div className='instructions'>\n        <p>You will need to take 4 images from each corner of the desired geofence</p>\n        <ul>\n          <li>To take a photo, simply press the blue camera icon</li>\n          <li>To retake a photo, simply press the green camera icon</li>\n        </ul>\n        <hr className='divider' />\n      </div>\n      {!isConfirmed && <PhotoCapture onCapture={handleCapture} />}\n      {coordinates.length === 4 && !isConfirmed && (\n        <>\n          <div className=\"photo-gallery\">\n            {coordinates.map((coord, index) => (\n              <div key={index} style={{ margin: '0 10px', textAlign: 'center' }}>\n                <h4>Photo {index + 1} (of 4)</h4>\n                <img src={coord.imageUrl} alt={`Photo ${index + 1}`} style={{ width: '100px', height: '100px', objectFit: 'cover' }} />\n              </div>\n            ))}\n          </div>\n          <div className=\"map-container\">\n            <Map\n              coordinates={coordinates}\n              onConfirm={handleConfirm}\n              onStartOver={handleStartOver}\n              onRetake={handleRetake}\n            />\n          </div>\n          <button onClick={handleConfirm} disabled={coordinates.length !== 4}>Submit</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}