{"ast":null,"code":"import React,{useState}from'react';import PhotoCapture from'./PhotoCapture';import Map from'./Map';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[coordinates,setCoordinates]=useState([]);const[isConfirmed,setIsConfirmed]=useState(false);const handleCapture=photos=>{if(photos.length===4){setCoordinates(photos.map(photo=>({latitude:photo.latitude,longitude:photo.longitude})));setIsConfirmed(false);}};const handleConfirm=()=>{setIsConfirmed(true);// Handle confirmed bounding box, e.g., save to server\n};const handleStartOver=()=>{setCoordinates([]);setIsConfirmed(false);};const handleRetake=index=>{// Handle retake photo at index\nsetIsConfirmed(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Photo Geo Logger\"}),!isConfirmed&&/*#__PURE__*/_jsx(PhotoCapture,{onCapture:handleCapture}),coordinates.length===4&&!isConfirmed&&/*#__PURE__*/_jsx(Map,{coordinates:coordinates,onConfirm:handleConfirm,onStartOver:handleStartOver,onRetake:handleRetake})]});};export default App;","map":{"version":3,"names":["React","useState","PhotoCapture","Map","jsx","_jsx","jsxs","_jsxs","App","coordinates","setCoordinates","isConfirmed","setIsConfirmed","handleCapture","photos","length","map","photo","latitude","longitude","handleConfirm","handleStartOver","handleRetake","index","children","onCapture","onConfirm","onStartOver","onRetake"],"sources":["/Users/buddychin/Desktop/geofence-photo/photo-geo-pwa/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PhotoCapture from './PhotoCapture';\nimport Map from './Map';\n\nconst App = () => {\n  const [coordinates, setCoordinates] = useState([]);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n\n  const handleCapture = (photos) => {\n    if (photos.length === 4) {\n      setCoordinates(photos.map(photo => ({ latitude: photo.latitude, longitude: photo.longitude })));\n      setIsConfirmed(false);\n    }\n  };\n\n  const handleConfirm = () => {\n    setIsConfirmed(true);\n    // Handle confirmed bounding box, e.g., save to server\n  };\n\n  const handleStartOver = () => {\n    setCoordinates([]);\n    setIsConfirmed(false);\n  };\n\n  const handleRetake = (index) => {\n    // Handle retake photo at index\n    setIsConfirmed(false);\n  };\n\n  return (\n    <div>\n      <h1>Photo Geo Logger</h1>\n      {!isConfirmed && <PhotoCapture onCapture={handleCapture} />}\n      {coordinates.length === 4 && !isConfirmed && (\n        <Map\n          coordinates={coordinates}\n          onConfirm={handleConfirm}\n          onStartOver={handleStartOver}\n          onRetake={handleRetake}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,GAAG,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACU,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAErD,KAAM,CAAAY,aAAa,CAAIC,MAAM,EAAK,CAChC,GAAIA,MAAM,CAACC,MAAM,GAAK,CAAC,CAAE,CACvBL,cAAc,CAACI,MAAM,CAACE,GAAG,CAACC,KAAK,GAAK,CAAEC,QAAQ,CAAED,KAAK,CAACC,QAAQ,CAAEC,SAAS,CAAEF,KAAK,CAACE,SAAU,CAAC,CAAC,CAAC,CAAC,CAC/FP,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAED,KAAM,CAAAQ,aAAa,CAAGA,CAAA,GAAM,CAC1BR,cAAc,CAAC,IAAI,CAAC,CACpB;AACF,CAAC,CAED,KAAM,CAAAS,eAAe,CAAGA,CAAA,GAAM,CAC5BX,cAAc,CAAC,EAAE,CAAC,CAClBE,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,CAED,KAAM,CAAAU,YAAY,CAAIC,KAAK,EAAK,CAC9B;AACAX,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,CAED,mBACEL,KAAA,QAAAiB,QAAA,eACEnB,IAAA,OAAAmB,QAAA,CAAI,kBAAgB,CAAI,CAAC,CACxB,CAACb,WAAW,eAAIN,IAAA,CAACH,YAAY,EAACuB,SAAS,CAAEZ,aAAc,CAAE,CAAC,CAC1DJ,WAAW,CAACM,MAAM,GAAK,CAAC,EAAI,CAACJ,WAAW,eACvCN,IAAA,CAACF,GAAG,EACFM,WAAW,CAAEA,WAAY,CACzBiB,SAAS,CAAEN,aAAc,CACzBO,WAAW,CAAEN,eAAgB,CAC7BO,QAAQ,CAAEN,YAAa,CACxB,CACF,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}