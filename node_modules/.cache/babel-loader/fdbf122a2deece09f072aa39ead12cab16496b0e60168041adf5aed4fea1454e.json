{"ast":null,"code":"import emailjs from'emailjs-com';const sendEmail=(photos,coordinates,mapImage)=>{const serviceId='YOUR_SERVICE_ID';// Replace with your EmailJS service ID\nconst templateId='YOUR_TEMPLATE_ID';// Replace with your EmailJS template ID\nconst userId='YOUR_USER_ID';// Replace with your EmailJS user ID\nconst formData=new FormData();photos.forEach((photo,index)=>{formData.append(\"photo\".concat(index+1),photo.file,\"photo\".concat(index+1,\".jpg\"));});const templateParams={coordinates:coordinates.map((coord,index)=>\"Photo \".concat(index+1,\": \").concat(coord.latitude,\", \").concat(coord.longitude)).join('\\n'),mapImage};emailjs.send(serviceId,templateId,templateParams,userId).then(response=>{console.log('SUCCESS!',response.status,response.text);},error=>{console.error('FAILED...',error);});};export default sendEmail;","map":{"version":3,"names":["emailjs","sendEmail","photos","coordinates","mapImage","serviceId","templateId","userId","formData","FormData","forEach","photo","index","append","concat","file","templateParams","map","coord","latitude","longitude","join","send","then","response","console","log","status","text","error"],"sources":["/Users/buddychin/Desktop/geofence-photo/photo-geo-pwa/src/EmailService.js"],"sourcesContent":["import emailjs from 'emailjs-com';\n\nconst sendEmail = (photos, coordinates, mapImage) => {\n  const serviceId = 'YOUR_SERVICE_ID'; // Replace with your EmailJS service ID\n  const templateId = 'YOUR_TEMPLATE_ID'; // Replace with your EmailJS template ID\n  const userId = 'YOUR_USER_ID'; // Replace with your EmailJS user ID\n\n  const formData = new FormData();\n  photos.forEach((photo, index) => {\n    formData.append(`photo${index + 1}`, photo.file, `photo${index + 1}.jpg`);\n  });\n\n  const templateParams = {\n    coordinates: coordinates.map((coord, index) => `Photo ${index + 1}: ${coord.latitude}, ${coord.longitude}`).join('\\n'),\n    mapImage,\n  };\n\n  emailjs.send(serviceId, templateId, templateParams, userId)\n    .then((response) => {\n      console.log('SUCCESS!', response.status, response.text);\n    }, (error) => {\n      console.error('FAILED...', error);\n    });\n};\n\nexport default sendEmail;"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,aAAa,CAEjC,KAAM,CAAAC,SAAS,CAAGA,CAACC,MAAM,CAAEC,WAAW,CAAEC,QAAQ,GAAK,CACnD,KAAM,CAAAC,SAAS,CAAG,iBAAiB,CAAE;AACrC,KAAM,CAAAC,UAAU,CAAG,kBAAkB,CAAE;AACvC,KAAM,CAAAC,MAAM,CAAG,cAAc,CAAE;AAE/B,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BP,MAAM,CAACQ,OAAO,CAAC,CAACC,KAAK,CAAEC,KAAK,GAAK,CAC/BJ,QAAQ,CAACK,MAAM,SAAAC,MAAA,CAASF,KAAK,CAAG,CAAC,EAAID,KAAK,CAACI,IAAI,SAAAD,MAAA,CAAUF,KAAK,CAAG,CAAC,QAAM,CAAC,CAC3E,CAAC,CAAC,CAEF,KAAM,CAAAI,cAAc,CAAG,CACrBb,WAAW,CAAEA,WAAW,CAACc,GAAG,CAAC,CAACC,KAAK,CAAEN,KAAK,YAAAE,MAAA,CAAcF,KAAK,CAAG,CAAC,OAAAE,MAAA,CAAKI,KAAK,CAACC,QAAQ,OAAAL,MAAA,CAAKI,KAAK,CAACE,SAAS,CAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CACtHjB,QACF,CAAC,CAEDJ,OAAO,CAACsB,IAAI,CAACjB,SAAS,CAAEC,UAAU,CAAEU,cAAc,CAAET,MAAM,CAAC,CACxDgB,IAAI,CAAEC,QAAQ,EAAK,CAClBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEF,QAAQ,CAACG,MAAM,CAAEH,QAAQ,CAACI,IAAI,CAAC,CACzD,CAAC,CAAGC,KAAK,EAAK,CACZJ,OAAO,CAACI,KAAK,CAAC,WAAW,CAAEA,KAAK,CAAC,CACnC,CAAC,CAAC,CACN,CAAC,CAED,cAAe,CAAA5B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}