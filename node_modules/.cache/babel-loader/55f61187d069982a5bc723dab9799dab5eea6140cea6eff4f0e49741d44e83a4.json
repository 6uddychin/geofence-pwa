{"ast":null,"code":"import React,{useRef}from'react';import{MapContainer,TileLayer,Polygon,Marker,Popup}from'react-leaflet';import'leaflet/dist/leaflet.css';import html2canvas from'html2canvas';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Map=_ref=>{let{coordinates,onConfirm,onStartOver,onRetake}=_ref;const mapRef=useRef(null);const captureMapImage=async()=>{if(mapRef.current){const canvas=await html2canvas(mapRef.current);const imgData=canvas.toDataURL('image/png');return imgData;}};const handleConfirm=async()=>{const mapImage=await captureMapImage();onConfirm(mapImage);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{ref:mapRef,style:{width:'100vw',height:'50vh'},children:/*#__PURE__*/_jsxs(MapContainer,{center:[coordinates[0].latitude,coordinates[0].longitude],zoom:13,style:{width:'100%',height:'100%'},children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"}),coordinates.length===4&&/*#__PURE__*/_jsx(Polygon,{positions:coordinates.map(coord=>[coord.latitude,coord.longitude]),children:coordinates.map((coord,index)=>/*#__PURE__*/_jsx(Marker,{position:[coord.latitude,coord.longitude],children:/*#__PURE__*/_jsxs(Popup,{children:[\"Photo \",index+1,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>onRetake(index),children:[\"Retake Photo \",index+1]})]})},index))})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleConfirm,children:\"Confirm\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onStartOver,children:\"Start Over\"})]});};export default Map;","map":{"version":3,"names":["React","useRef","MapContainer","TileLayer","Polygon","Marker","Popup","html2canvas","jsx","_jsx","jsxs","_jsxs","Map","_ref","coordinates","onConfirm","onStartOver","onRetake","mapRef","captureMapImage","current","canvas","imgData","toDataURL","handleConfirm","mapImage","children","ref","style","width","height","center","latitude","longitude","zoom","url","attribution","length","positions","map","coord","index","position","onClick"],"sources":["/Users/buddychin/Desktop/geofence-photo/photo-geo-pwa/src/Map.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { MapContainer, TileLayer, Polygon, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport html2canvas from 'html2canvas';\n\nconst Map = ({ coordinates, onConfirm, onStartOver, onRetake }) => {\n  const mapRef = useRef(null);\n\n  const captureMapImage = async () => {\n    if (mapRef.current) {\n      const canvas = await html2canvas(mapRef.current);\n      const imgData = canvas.toDataURL('image/png');\n      return imgData;\n    }\n  };\n\n  const handleConfirm = async () => {\n    const mapImage = await captureMapImage();\n    onConfirm(mapImage);\n  };\n\n  return (\n    <div>\n      <div ref={mapRef} style={{ width: '100vw', height: '50vh' }}>\n        <MapContainer center={[coordinates[0].latitude, coordinates[0].longitude]} zoom={13} style={{ width: '100%', height: '100%' }}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          {coordinates.length === 4 && (\n            <Polygon positions={coordinates.map(coord => [coord.latitude, coord.longitude])}>\n              {coordinates.map((coord, index) => (\n                <Marker key={index} position={[coord.latitude, coord.longitude]}>\n                  <Popup>\n                    Photo {index + 1}\n                    <br />\n                    <button onClick={() => onRetake(index)}>Retake Photo {index + 1}</button>\n                  </Popup>\n                </Marker>\n              ))}\n            </Polygon>\n          )}\n        </MapContainer>\n      </div>\n      <button onClick={handleConfirm}>Confirm</button>\n      <button onClick={onStartOver}>Start Over</button>\n    </div>\n  );\n};\n\nexport default Map;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,KAAQ,OAAO,CACrC,OAASC,YAAY,CAAEC,SAAS,CAAEC,OAAO,CAAEC,MAAM,CAAEC,KAAK,KAAQ,eAAe,CAC/E,MAAO,0BAA0B,CACjC,MAAO,CAAAC,WAAW,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,GAAG,CAAGC,IAAA,EAAuD,IAAtD,CAAEC,WAAW,CAAEC,SAAS,CAAEC,WAAW,CAAEC,QAAS,CAAC,CAAAJ,IAAA,CAC5D,KAAM,CAAAK,MAAM,CAAGjB,MAAM,CAAC,IAAI,CAAC,CAE3B,KAAM,CAAAkB,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAID,MAAM,CAACE,OAAO,CAAE,CAClB,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAd,WAAW,CAACW,MAAM,CAACE,OAAO,CAAC,CAChD,KAAM,CAAAE,OAAO,CAAGD,MAAM,CAACE,SAAS,CAAC,WAAW,CAAC,CAC7C,MAAO,CAAAD,OAAO,CAChB,CACF,CAAC,CAED,KAAM,CAAAE,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,eAAe,CAAC,CAAC,CACxCJ,SAAS,CAACU,QAAQ,CAAC,CACrB,CAAC,CAED,mBACEd,KAAA,QAAAe,QAAA,eACEjB,IAAA,QAAKkB,GAAG,CAAET,MAAO,CAACU,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAJ,QAAA,cAC1Df,KAAA,CAACT,YAAY,EAAC6B,MAAM,CAAE,CAACjB,WAAW,CAAC,CAAC,CAAC,CAACkB,QAAQ,CAAElB,WAAW,CAAC,CAAC,CAAC,CAACmB,SAAS,CAAE,CAACC,IAAI,CAAE,EAAG,CAACN,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAJ,QAAA,eAC5HjB,IAAA,CAACN,SAAS,EACRgC,GAAG,CAAC,oDAAoD,CACxDC,WAAW,CAAC,0EAA0E,CACvF,CAAC,CACDtB,WAAW,CAACuB,MAAM,GAAK,CAAC,eACvB5B,IAAA,CAACL,OAAO,EAACkC,SAAS,CAAExB,WAAW,CAACyB,GAAG,CAACC,KAAK,EAAI,CAACA,KAAK,CAACR,QAAQ,CAAEQ,KAAK,CAACP,SAAS,CAAC,CAAE,CAAAP,QAAA,CAC7EZ,WAAW,CAACyB,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBAC5BhC,IAAA,CAACJ,MAAM,EAAaqC,QAAQ,CAAE,CAACF,KAAK,CAACR,QAAQ,CAAEQ,KAAK,CAACP,SAAS,CAAE,CAAAP,QAAA,cAC9Df,KAAA,CAACL,KAAK,EAAAoB,QAAA,EAAC,QACC,CAACe,KAAK,CAAG,CAAC,cAChBhC,IAAA,QAAK,CAAC,cACNE,KAAA,WAAQgC,OAAO,CAAEA,CAAA,GAAM1B,QAAQ,CAACwB,KAAK,CAAE,CAAAf,QAAA,EAAC,eAAa,CAACe,KAAK,CAAG,CAAC,EAAS,CAAC,EACpE,CAAC,EALGA,KAML,CACT,CAAC,CACK,CACV,EACW,CAAC,CACZ,CAAC,cACNhC,IAAA,WAAQkC,OAAO,CAAEnB,aAAc,CAAAE,QAAA,CAAC,SAAO,CAAQ,CAAC,cAChDjB,IAAA,WAAQkC,OAAO,CAAE3B,WAAY,CAAAU,QAAA,CAAC,YAAU,CAAQ,CAAC,EAC9C,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}