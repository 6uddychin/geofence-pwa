{"ast":null,"code":"import React,{useState,useEffect}from'react';import PhotoCapture from'./PhotoCapture';import Map from'./Map';import'./App.css';import amznLogo from'./assets/amzn_logo.png';// Ensure this path is correct\nimport sendEmail from'./EmailService';// Import the email service\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const[coordinates,setCoordinates]=useState([]);const[isConfirmed,setIsConfirmed]=useState(false);const[photos,setPhotos]=useState([]);const[userLocation,setUserLocation]=useState(null);useEffect(()=>{// Get user's current location\nnavigator.geolocation.getCurrentPosition(position=>{setUserLocation({latitude:position.coords.latitude,longitude:position.coords.longitude});},error=>{console.error('Error getting user location:',error);});},[]);const handleCapture=capturedPhotos=>{if(capturedPhotos.length===4){setCoordinates(capturedPhotos.map(photo=>({...photo,latitude:photo.latitude,longitude:photo.longitude})));setPhotos(capturedPhotos);setIsConfirmed(false);}};const handleConfirm=async mapImage=>{setIsConfirmed(true);sendEmail(photos,coordinates,mapImage);// Handle confirmed bounding box, e.g., save to server\n};const handleStartOver=()=>{setCoordinates([]);setPhotos([]);setIsConfirmed(false);};const handleRetake=index=>{setIsConfirmed(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"img\",{src:amznLogo,alt:\"Amazon Logo\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Photo Geo Logger\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"You will need to take 4 images from each corner of the desired geofence\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"To take a photo, simply press the blue camera icon\"}),/*#__PURE__*/_jsx(\"li\",{children:\"To retake a photo, simply press the green camera icon\"})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"divider\"})]}),!isConfirmed&&/*#__PURE__*/_jsx(PhotoCapture,{onCapture:handleCapture}),userLocation&&/*#__PURE__*/_jsx(\"div\",{className:\"map-container\",children:/*#__PURE__*/_jsx(Map,{userLocation:userLocation,coordinates:coordinates,onConfirm:handleConfirm,onStartOver:handleStartOver,onRetake:handleRetake})}),coordinates.length===4&&!isConfirmed&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleConfirm(),disabled:coordinates.length!==4,children:\"Submit\"})})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","PhotoCapture","Map","amznLogo","sendEmail","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","coordinates","setCoordinates","isConfirmed","setIsConfirmed","photos","setPhotos","userLocation","setUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","console","handleCapture","capturedPhotos","length","map","photo","handleConfirm","mapImage","handleStartOver","handleRetake","index","children","src","alt","className","onCapture","onConfirm","onStartOver","onRetake","onClick","disabled"],"sources":["/Users/buddychin/Desktop/geofence-photo/photo-geo-pwa/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PhotoCapture from './PhotoCapture';\nimport Map from './Map';\nimport './App.css';\nimport amznLogo from './assets/amzn_logo.png'; // Ensure this path is correct\nimport sendEmail from './EmailService'; // Import the email service\n\nconst App = () => {\n  const [coordinates, setCoordinates] = useState([]);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n\n  useEffect(() => {\n    // Get user's current location\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        setUserLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        });\n      },\n      (error) => {\n        console.error('Error getting user location:', error);\n      }\n    );\n  }, []);\n\n  const handleCapture = (capturedPhotos) => {\n    if (capturedPhotos.length === 4) {\n      setCoordinates(capturedPhotos.map(photo => ({ ...photo, latitude: photo.latitude, longitude: photo.longitude })));\n      setPhotos(capturedPhotos);\n      setIsConfirmed(false);\n    }\n  };\n\n  const handleConfirm = async (mapImage) => {\n    setIsConfirmed(true);\n    sendEmail(photos, coordinates, mapImage);\n    // Handle confirmed bounding box, e.g., save to server\n  };\n\n  const handleStartOver = () => {\n    setCoordinates([]);\n    setPhotos([]);\n    setIsConfirmed(false);\n  };\n\n  const handleRetake = (index) => {\n    setIsConfirmed(false);\n  };\n\n  return (\n    <div>\n      <header>\n        <img src={amznLogo} alt=\"Amazon Logo\" />\n        <h1>Photo Geo Logger</h1>\n      </header>\n      <div className='instructions'>\n        <p>You will need to take 4 images from each corner of the desired geofence</p>\n        <ul>\n          <li>To take a photo, simply press the blue camera icon</li>\n          <li>To retake a photo, simply press the green camera icon</li>\n        </ul>\n        <hr className='divider' />\n      </div>\n      {!isConfirmed && <PhotoCapture onCapture={handleCapture} />}\n      {userLocation && (\n        <div className=\"map-container\">\n          <Map\n            userLocation={userLocation}\n            coordinates={coordinates}\n            onConfirm={handleConfirm}\n            onStartOver={handleStartOver}\n            onRetake={handleRetake}\n          />\n        </div>\n      )}\n      {coordinates.length === 4 && !isConfirmed && (\n        <>\n\n          <button onClick={() => handleConfirm()} disabled={coordinates.length !== 4}>Submit</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,WAAW,CAClB,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAAE;AAC/C,MAAO,CAAAC,SAAS,KAAM,gBAAgB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAExC,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACe,WAAW,CAAEC,cAAc,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACiB,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACmB,YAAY,CAAEC,eAAe,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAEtDC,SAAS,CAAC,IAAM,CACd;AACAoB,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,EAAK,CACZJ,eAAe,CAAC,CACdK,QAAQ,CAAED,QAAQ,CAACE,MAAM,CAACD,QAAQ,CAClCE,SAAS,CAAEH,QAAQ,CAACE,MAAM,CAACC,SAC7B,CAAC,CAAC,CACJ,CAAC,CACAC,KAAK,EAAK,CACTC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,aAAa,CAAIC,cAAc,EAAK,CACxC,GAAIA,cAAc,CAACC,MAAM,GAAK,CAAC,CAAE,CAC/BlB,cAAc,CAACiB,cAAc,CAACE,GAAG,CAACC,KAAK,GAAK,CAAE,GAAGA,KAAK,CAAET,QAAQ,CAAES,KAAK,CAACT,QAAQ,CAAEE,SAAS,CAAEO,KAAK,CAACP,SAAU,CAAC,CAAC,CAAC,CAAC,CACjHT,SAAS,CAACa,cAAc,CAAC,CACzBf,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAED,KAAM,CAAAmB,aAAa,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACxCpB,cAAc,CAAC,IAAI,CAAC,CACpBX,SAAS,CAACY,MAAM,CAAEJ,WAAW,CAAEuB,QAAQ,CAAC,CACxC;AACF,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5BvB,cAAc,CAAC,EAAE,CAAC,CAClBI,SAAS,CAAC,EAAE,CAAC,CACbF,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,CAED,KAAM,CAAAsB,YAAY,CAAIC,KAAK,EAAK,CAC9BvB,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,CAED,mBACEP,KAAA,QAAA+B,QAAA,eACE/B,KAAA,WAAA+B,QAAA,eACEjC,IAAA,QAAKkC,GAAG,CAAErC,QAAS,CAACsC,GAAG,CAAC,aAAa,CAAE,CAAC,cACxCnC,IAAA,OAAAiC,QAAA,CAAI,kBAAgB,CAAI,CAAC,EACnB,CAAC,cACT/B,KAAA,QAAKkC,SAAS,CAAC,cAAc,CAAAH,QAAA,eAC3BjC,IAAA,MAAAiC,QAAA,CAAG,yEAAuE,CAAG,CAAC,cAC9E/B,KAAA,OAAA+B,QAAA,eACEjC,IAAA,OAAAiC,QAAA,CAAI,oDAAkD,CAAI,CAAC,cAC3DjC,IAAA,OAAAiC,QAAA,CAAI,uDAAqD,CAAI,CAAC,EAC5D,CAAC,cACLjC,IAAA,OAAIoC,SAAS,CAAC,SAAS,CAAE,CAAC,EACvB,CAAC,CACL,CAAC5B,WAAW,eAAIR,IAAA,CAACL,YAAY,EAAC0C,SAAS,CAAEd,aAAc,CAAE,CAAC,CAC1DX,YAAY,eACXZ,IAAA,QAAKoC,SAAS,CAAC,eAAe,CAAAH,QAAA,cAC5BjC,IAAA,CAACJ,GAAG,EACFgB,YAAY,CAAEA,YAAa,CAC3BN,WAAW,CAAEA,WAAY,CACzBgC,SAAS,CAAEV,aAAc,CACzBW,WAAW,CAAET,eAAgB,CAC7BU,QAAQ,CAAET,YAAa,CACxB,CAAC,CACC,CACN,CACAzB,WAAW,CAACmB,MAAM,GAAK,CAAC,EAAI,CAACjB,WAAW,eACvCR,IAAA,CAAAI,SAAA,EAAA6B,QAAA,cAEEjC,IAAA,WAAQyC,OAAO,CAAEA,CAAA,GAAMb,aAAa,CAAC,CAAE,CAACc,QAAQ,CAAEpC,WAAW,CAACmB,MAAM,GAAK,CAAE,CAAAQ,QAAA,CAAC,QAAM,CAAQ,CAAC,CAC3F,CACH,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA5B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}